{"version":3,"sources":["artikel.ts","web-api.ts","app.ts","environment.ts","main.ts","resources/index.ts","/Users/tgraf/PycharmProjects/pymovoice/pymovoice/static/app/src/app.html"],"names":[],"mappings":";;IAKA;QAME;YALA,SAAI,GAAG,KAAK,CAAC;YACb,eAAU,GAAG,MAAM,CAAC;YACpB,YAAO,GAAG,KAAK,CAAC;YAChB,kBAAa,GAAG,CAAC,CAAC;QAEF,CAAC;QACnB,cAAC;IAAD,CAPA,AAOC,IAAA;IAPY,eAAO,UAOnB,CAAA;;;;;ICND,IAAI,MAAM,GAAG,IAAI,iCAAU,EAAE,CAAC;IAE9B;QAAA;QAUA,CAAC;QATC,mCAAkB,GAAlB,UAAmB,OAAO;YACxB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,MAAM,CAAC,KAAK,CAAC,2BAA2B,GAAC,OAAO,CAAC,OAAO,GAAC,OAAO,CAAC;qBAC9D,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;qBACjC,IAAI,CAAC,UAAA,IAAI;oBACR,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACL,CAAC;QACH,aAAC;IAAD,CAVA,AAUC,IAAA;IAVY,cAAM,SAUlB,CAAA;;;;;;;;;;;;;;ICZD;QAaE,aAAoB,GAAW,EAAU,EAAmB;YAAxC,QAAG,GAAH,GAAG,CAAQ;YAAU,OAAE,GAAF,EAAE,CAAiB;YAZ5D,YAAO,GAAG,cAAc,CAAC;YACzB,oBAAe,GAAG,IAAI,iBAAO,EAAE,CAAC;QAWgC,CAAC;QAVjE,2BAAa,GAAb;YAAA,iBAQC;YAPC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CACrD,UAAA,OAAO;gBACN,KAAI,CAAC,eAAe,GAAY,OAAO,CAAC;YAE1C,CAAC,CAAC,CAAC;QAGL,CAAC;QAZH;YAAC,0BAAM,CAAC,gBAAM,EAAE,0CAAe,CAAC;;eAAA;QAgBhC,UAAC;IAAD,CAfA,AAeC,IAAA;IAfY,WAAG,MAef,CAAA;;;;;ICrBD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD","file":"app-bundle.js","sourcesContent":["/**\n * Created by tgraf on 06.11.16.\n */\n\n\nexport class Artikel {\n  done = false;\n  detailname = 'Name';\n  eancode = 'EAN';\n  stockquantity = 0;\n\n  constructor() { }\n}\n\n\n","/**\n * Created by tgraf on 06.11.16.\n */\n\nimport {HttpClient} from 'aurelia-fetch-client';\n\nlet client = new HttpClient();\n\nexport class WebAPI {\n  getExternalArticle(article){\n    return new Promise(resolve => {\n      client.fetch('/api/v1/external_article/'+article.eancode+'.json')\n        .then(response => response.json())\n        .then(data => {\n          resolve(data);\n        });\n    });\n  }\n}\n","import {Artikel} from './artikel'\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {inject} from 'aurelia-framework';\nimport {WebAPI} from './web-api';\n\n@inject(WebAPI, EventAggregator)\nexport class App {\n  message = 'Hello World!';\n  current_article = new Artikel();\n  searchArticle() {\n    this.api.getExternalArticle(this.current_article).then\n    (article => {\n      this.current_article = <Artikel>article;\n\n    });\n\n\n  }\n\n  constructor(private api: WebAPI, private ea: EventAggregator) { }\n  \n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"../src"}